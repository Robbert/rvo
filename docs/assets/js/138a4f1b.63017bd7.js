"use strict";(self.webpackChunk_nl_rvo_docusaurus=self.webpackChunk_nl_rvo_docusaurus||[]).push([[5413],{1810:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>l,default:()=>v,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"pagination/pagination.docusaurus","title":"Pagination","description":"","source":"@site/../../components/pagination/pagination.docusaurus.mdx","sourceDirName":"pagination","slug":"/pagination/","permalink":"/rvo/docs/componenten/pagination/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Pagination","hide_title":false,"slug":"."},"sidebar":"components","previous":{"title":"Ordered & unordered list","permalink":"/rvo/docs/componenten/ordered-unordered-list/"},"next":{"title":"Progress Tracker","permalink":"/rvo/docs/componenten/progress-tracker/"}}');var s=n(3159),i=n(9520);function r(e){const a={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Gebruik ellipsen (\u2026) om eventuele overgeslagen pagina's te vervangen. Bijvoorbeeld:"}),"\n",(0,s.jsx)(a.p,{children:"[1] 2 \u2026 10"}),"\n",(0,s.jsx)(a.p,{children:"1 [2] 3 \u2026 100"}),"\n",(0,s.jsx)(a.p,{children:"1 2 [3] 4 \u2026 100"}),"\n",(0,s.jsx)(a.p,{children:"1 2 3 [4] 5 \u2026 100"}),"\n",(0,s.jsx)(a.p,{children:"1 \u2026 4 [5] 6 \u2026 100"}),"\n",(0,s.jsx)(a.p,{children:"1 \u2026 97 [98] 99 100"}),"\n",(0,s.jsx)(a.p,{children:"1 \u2026 98 [99] 100"}),"\n",(0,s.jsx)(a.p,{children:"1 \u2026 99 [100]"}),"\n",(0,s.jsx)(a.p,{children:"De functie voor deze logica kan als volgt worden geschreven:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'const generatePageNumberMarkup = () => "";\nconst generateEllipsisMarkup = () => "";\n\nconst generatePageNumbers = (totalPages, activePage) => {\n  const pages = [];\n\n  // Always add the first page\n  pages.push(generatePageNumberMarkup(1, activePage));\n\n  // Add ellipses if the active page is more than 4\n  if (activePage > 4) {\n    pages.push(generateEllipsisMarkup());\n  }\n  if (activePage === 4) {\n    pages.push(generatePageNumberMarkup(2, activePage));\n  }\n\n  // Add the page before the active page if it\'s more than 2\n  if (activePage > 2) {\n    pages.push(generatePageNumberMarkup(activePage - 1, activePage));\n  }\n\n  // Add the active page if it\'s not the first or last page\n  if (activePage > 1 && activePage < totalPages) {\n    pages.push(generatePageNumberMarkup(activePage, activePage));\n  }\n\n  // Add the page after the active page if it\'s less than total pages minus 1 and not the last page\n  if (activePage < totalPages - 1 && activePage !== totalPages - 2) {\n    pages.push(generatePageNumberMarkup(activePage + 1, activePage));\n  }\n\n  // Add ellipses if the active page is less than the total pages minus 3\n  if (activePage < totalPages - 3) {\n    pages.push(generateEllipsisMarkup());\n  }\n\n  // Add the second last page if the active page is less than the total pages minus 1 and greater than or equal to total pages minus 3\n  if (activePage < totalPages - 1 && activePage >= totalPages - 3) {\n    pages.push(generatePageNumberMarkup(totalPages - 1, activePage));\n  }\n\n  // Always add the last page\n  if (totalPages !== 1) {\n    pages.push(generatePageNumberMarkup(totalPages, activePage));\n  }\n\n  return pages;\n};\n\ngeneratePageNumbers(5, 30);\n'})})]})}function g(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}var o=n(2150),p=n(4526);const c={title:"Pagination",hide_title:!1,slug:"."},l=void 0,u={},d=[];function h(e){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(p.A,{children:(0,s.jsx)(o.Ay,{})}),"\n",(0,s.jsx)(g,{})]})}function v(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(h,{...e})}):h()}}}]);