"use strict";(self.webpackChunk_nl_rvo_docusaurus=self.webpackChunk_nl_rvo_docusaurus||[]).push([[4523],{2851:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>v,frontMatter:()=>p,metadata:()=>u,toc:()=>d});var n=t(2798),s=(t(9901),t(7522)),i=t(9218);const o={toc:[]};function r(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Gebruik ellipsen (\u2026) om eventuele overgeslagen pagina's te vervangen. Bijvoorbeeld:"),(0,s.kt)("p",null,"[1]"," 2 \u2026 10"),(0,s.kt)("p",null,"1 ","[2]"," 3 \u2026 100"),(0,s.kt)("p",null,"1 2 ","[3]"," 4 \u2026 100"),(0,s.kt)("p",null,"1 2 3 ","[4]"," 5 \u2026 100"),(0,s.kt)("p",null,"1 \u2026 4 ","[5]"," 6 \u2026 100"),(0,s.kt)("p",null,"1 \u2026 97 ","[98]"," 99 100"),(0,s.kt)("p",null,"1 \u2026 98 ","[99]"," 100"),(0,s.kt)("p",null,"1 \u2026 99 ","[100]"),(0,s.kt)("p",null,"De functie voor deze logica kan als volgt worden geschreven:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const generatePageNumberMarkup = () => "";\nconst generateEllipsisMarkup = () => "";\n\nconst generatePageNumbers = (totalPages, activePage) => {\n  const pages = [];\n\n  // Always add the first page\n  pages.push(generatePageNumberMarkup(1, activePage));\n\n  // Add ellipses if the active page is more than 4\n  if (activePage > 4) {\n    pages.push(generateEllipsisMarkup());\n  }\n  if (activePage === 4) {\n    pages.push(generatePageNumberMarkup(2, activePage));\n  }\n\n  // Add the page before the active page if it\'s more than 2\n  if (activePage > 2) {\n    pages.push(generatePageNumberMarkup(activePage - 1, activePage));\n  }\n\n  // Add the active page if it\'s not the first or last page\n  if (activePage > 1 && activePage < totalPages) {\n    pages.push(generatePageNumberMarkup(activePage, activePage));\n  }\n\n  // Add the page after the active page if it\'s less than total pages minus 1 and not the last page\n  if (activePage < totalPages - 1 && activePage !== totalPages - 2) {\n    pages.push(generatePageNumberMarkup(activePage + 1, activePage));\n  }\n\n  // Add ellipses if the active page is less than the total pages minus 3\n  if (activePage < totalPages - 3) {\n    pages.push(generateEllipsisMarkup());\n  }\n\n  // Add the second last page if the active page is less than the total pages minus 1 and greater than or equal to total pages minus 3\n  if (activePage < totalPages - 1 && activePage >= totalPages - 3) {\n    pages.push(generatePageNumberMarkup(totalPages - 1, activePage));\n  }\n\n  // Always add the last page\n  if (totalPages !== 1) {\n    pages.push(generatePageNumberMarkup(totalPages, activePage));\n  }\n\n  return pages;\n};\n\ngeneratePageNumbers(5, 30);\n')))}r.isMDXComponent=!0;var g=t(5564);const p={title:"Pagination",hide_title:!1,slug:"."},l=void 0,u={unversionedId:"pagination/pagination.docusaurus",id:"pagination/pagination.docusaurus",title:"Pagination",description:"",source:"@site/../../components/pagination/pagination.docusaurus.mdx",sourceDirName:"pagination",slug:"/pagination/",permalink:"/rvo/docs/components/pagination/",draft:!1,tags:[],version:"current",frontMatter:{title:"Pagination",hide_title:!1,slug:"."},sidebar:"components",previous:{title:"Ordered & unordered list",permalink:"/rvo/docs/components/ordered-unordered-list/"},next:{title:"Progress Tracker",permalink:"/rvo/docs/components/progress-tracker/"}},c={},d=[],P={toc:d};function v(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},P,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)(i.Z,{mdxType:"ComponentExample"},(0,s.kt)(g.ZP,{mdxType:"Pagination"})),(0,s.kt)(r,{mdxType:"Documentation"}))}v.isMDXComponent=!0}}]);