name: Continuous Deployment

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.0"

      - name: Install
        run: |
          npm ci
          npm ls

      - name: "Continuous Integration: build"
        run: |
          npm run build --if-present

      - name: "Continuous Integration: lint"
        run: |
          npm run lint --if-present

      - name: "Continuous Integration: test"
        run: |
          npm run test --if-present

      - name: "Retain build artifact: Storybook"
        uses: actions/upload-artifact@v2
        with:
          name: storybook
          path: packages/storybook/dist/
          retention-days: 1

      - name: Push to UXPin
        if: "github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'skip ci')"
        run: npm run push
        working-directory: uxpin-merge
        env:
          UXPIN_AUTH_TOKEN: ${{ secrets.UXPIN_TOKEN }}

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        if: github.event.pull_request.draft == false && (github.actor != 'dependabot[bot]' || github.actor != 'dependabot-preview[bot]')
        with:
          autoAcceptChanges: master
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: packages/storybook/dist/

      - name: Publish to Chromatic for NL Design System visual regression tests
        uses: chromaui/action@v1
        if: github.event.pull_request.draft == false && (github.actor != 'dependabot[bot]' || github.actor != 'dependabot-preview[bot]')
        with:
          autoAcceptChanges: master
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_NLDESIGNSYSTEM }}
          storybookBuildDir: packages/storybook/dist/

  publish-storybook:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: "Restore build artifact: Storybook"
        uses: actions/download-artifact@v2
        with:
          name: storybook
          path: packages/storybook/dist/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.3
        with:
          branch: gh-pages
          folder: packages/storybook/dist/

  publish-npm:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.0"

      - name: "Continuous Deployment: install"
        run: |
          npm ci
          npm ls

      - name: "Continuous Deployment: build"
        run: |
          npm run build --if-present

      - name: "Continuous Deployment: publish to GitHub repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          npm run release -- --yes

      - name: "Continuous Deployment: publish to npm"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          npm run publish -- --no-verify-access --yes
          npm config delete "//registry.npmjs.org/:_authToken"
